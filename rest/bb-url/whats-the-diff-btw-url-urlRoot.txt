
Basically, there are 3 possibilities to construct model's url:

If the model object exists in a collection then its url method
will return an address composed of the "collection.url" and "model.id":

    [collection.url]/[id]


If you don't want to use a model inside collection, then model
urlRoot's value can be used instead of the "collection.url" fragment
resulting in the following pattern:

    [urlRoot]/[id]

Finally, if you're NOT planning to persist more that one model
of a given type to the server or will be defining URLs for each
model upon their *creation*, you can directly assing a value to

    model.url

Collections send only GET requests â€” to get an array of models
JSON data. For saving, removing and updating, the individual
models' save() (POST/PUT/PATCH) and destroy() (DELETE) methods
are used.

Here's the source code of Backbone.Model.url, that should help you:


    function() {
      var base = _.result(this, 'urlRoot')
                || _.result(this.collection, 'url')
                || urlError();
      if (this.isNew()) return base;
      return base
            + (base.charAt(base.length - 1) === '/' ? '' : '/')
            + encodeURIComponent(this.id);
    }

ref:
http://stackoverflow.com/questions/16862014/backbone-js-models-and-collection-urls
